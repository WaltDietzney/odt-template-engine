<?php

/**
 * Sample 14 - Advanced Tabs, Tables, and Key-Value Rendering
 *
 * Demonstrates advanced usage of paragraph tab stops, tabular layouts,
 * and structured key-value rendering using WaltDietzney's ODT Template Engine for PHP.
 */

use OdtTemplateEngine\OdtTemplate;
use OdtTemplateEngine\Elements\ImageElement;
use OdtTemplateEngine\Elements\Paragraph;
use OdtTemplateEngine\Elements\RichText;

// 1. Load and prepare the ODT template
$template = new OdtTemplate('samples/templates/template_14_advancedTabs.odt');
$template->load();
$template->assign([
    'title' => "WaltDietzney's ODT Template Engine — Enjoy!"
]);

$template->render();

// 2. Define and set document metadata
$template->setMeta([
    'title' => 'ODT Template Engine Demo Document',
    'subject' => 'Demonstration of paragraph tab stops, tabular blocks and key-value rendering',
    'description' => 'Auto-generated with WaltDietzney ODT Template Engine for PHP.',
    'keywords' => 'ODT, template, PHP, tab stops, document automation',
    'initial_author' => 'Template Engine Example Script',
    'author' => 'WaltDietzney',
    'language' => 'en-US',
    'creation_date' => date(DATE_W3C),
    'date' => date(DATE_W3C),
    'editing_cycles' => '1',
    'editing_duration' => 'PT5M',
    'generator' => 'ODT Template Engine (PHP) - v1.0',

    // Custom project-specific metadata
    'project_name' => 'Invoice Generation Demo',
    'project_version' => 'v1.2.0',
    'client' => 'Acme Corp.',
]);

$template->ensureParagraphStylesExist(
    [
        'Cite' =>
            [
                'margin-left' => '3cm',
                'margin-right' => '3cm',
                'margin-top' => '0.5cm',
                'padding' => '0.2cm',
                'border-left' => '3px solid #a83244'
            ]
    ]

);

// 3. Create document header and metadata paragraph [blocks
$projectMeta = (new Paragraph('Heading 2'))
    ->addText('Project Metadata', ['color' => '#333', 'underline' => 'single']);

$metaInfo = (new Paragraph())
    ->addText('Generated for: ', ['bold' => true])->addText('Acme Corp.')->addLineBreak()
    ->addText('Project: ', ['bold' => true])->addText('Invoice Generation Demo')->addLineBreak()
    ->addText('Version: ', ['bold' => true])->addText('v1.2.0')->addLineBreak()
    ->addText('Author: ', ['bold' => true])->addText('WaltDietzney')->addLineBreak()
    ->addText('Generated by: ', ['bold' => true])->addText('ODT Template Engine (PHP)')->addLineBreak()
    ->addText('Created: ', ['bold' => true])->addText(date('Y-m-d H:i'));

// 4. Create the title paragraph
$title = new Paragraph('Title');
$title->addText('Different Ways to Set Tabs');

// 5. Define tab stops for a tabbed line
$tabStops = [
    ['position' => 5.0, 'alignment' => 'left', 'text' => 'Item A', 'style' => ['bold' => true]],
    ['position' => 11.0, 'alignment' => 'right', 'text' => '€12.50', 'style' => ['color' => '#cfcfcf'], 'italic' => true],
];

$par1 = (new Paragraph())
    ->addTabsWithTexts($tabStops);

// 6. Insert an illustrative image (optional)
$img1 = new ImageElement('assets/addsTabsWithTexts.png', [
    'width' => '7cm',
    'align' => 'center',
    'wrap' => 'none',
]);

// 7. Create a small tabular data block
$rows = [
    ['Product', 'Price'],
    ['Widget', '€9.99'],
    ['Gadget', '€14.20'],
];

$par2 = (new Paragraph())
    ->addTabularLines($rows, $tabStops, ['color' => '#0066cc']);

// 8. Create a key-value summary line
$par3 = (new Paragraph())
    ->addKeyValueLine('Subtotal', '€24.19', 11.0, ['italic' => true, 'bold' => true]);

$text4 = 'The following examples demonstrate how to use our tab-handling features to generate rich, structured layouts with just a single template variable.';

$style4=['font-family'=>'Arial', 'color'=>'#a83244'];
$par4 = new Paragraph('default', ['margin-left' => '3cm', 'margin-right' => '3cm', 'border-left' => '3px solid #349beb', 'padding' => '0.2cm']);
$par4->addText($text4,$style4);


// 9. Assemble rich content
$rich = (new RichText())
    ->addParagraph($title)
    ->addParagraphBreak(2)
    ->addParagraph($par4)
    ->addParagraphBreak(2)

    // Example: addTabsWithTexts
    ->addParagraph('addTabsWithTexts()', 'Heading 1', ['underline' => 'single'])
    ->addParagraphBreak(1)
    ->addText('Use ')
    ->addText('addTabsWithTexts()', ['italic' => true, 'color' => '#a83244'])
    ->addText(' to insert multiple text blocks along a line at defined tab stops.')
    ->addParagraphBreak(1)
    ->addParagraph('$par1 = new Paragraph();', 'Cite', ['font-size' => '10pt', 'color' => '#a83244', 'italic' => true])
    ->addParagraphBreak(1)
    ->addParagraph(
        "$tabStops = [\n" .
        "    ['position' => 5.0, 'alignment' => 'left',  'text' => 'Item A', 'style' => ['bold' => true]],\n" .
        "    ['position' => 11.0, 'alignment' => 'right', 'text' => '€12.50', 'style' => ['color' => '#cfcfcf'], 'italic' => true],\n" .
        "];",
        'Cite',
        ['font-size' => '10pt', 'color' => '#a83244', 'italic' => true]
    )
    ->addParagraphBreak(1)
    ->addParagraph('$par1->addTabsWithTexts($tabStops);', 'Cite', ['font-size' => '10pt', 'color' => '#a83244', 'italic' => true])
    ->addParagraphBreak(2)
    ->addParagraph($par1)
    ->addParagraphBreak(2)

    // Example: addTabularLines
    ->addParagraph('addTabularLines()', 'Heading 1', ['underline' => 'single'])
    ->addParagraphBreak(1)
    ->addText('The method ')
    ->addText('addTabularLines()', ['italic' => true, 'color' => '#349beb'])
    ->addText(' renders tabular structures with header and rows.')
    ->addParagraphBreak(1)
    ->addParagraph($par2)
    ->addParagraphBreak(2)

    // Example: addKeyValueLine
    ->addParagraph('addKeyValueLine()', 'Heading 1', ['underline' => 'single'])
    ->addParagraphBreak(1)
    ->addText('Use ')
    ->addText('addKeyValueLine()', ['italic' => true, 'color' => '#349beb'])
    ->addText(' to insert aligned key-value pairs in a single line.')
    ->addParagraphBreak(1)
    ->addParagraph($par3)
    ->addParagraphBreak(2)

    // Summary and project metadata
    ->addParagraph('In the end, we only used three template variables to generate this document:')
    ->addBulletList([
        '{{logo}} for the logo image',
        '{{title}} for the title paragraph',
        '{{tabular_block}} for the tabbed content',
    ])
    ->addParagraphBreak(3)
    ->addText('We hope this gave you a great idea of how to use our ODT Template Engine!', ['bold' => true, 'font-size' => '24pt'])
    ->addParagraphBreak(3)
    ->addParagraph($projectMeta)
    ->addParagraphBreak(1)
    ->addParagraph($metaInfo);

// 10. Insert content into template variables
$template->setElement('tabular_block', $rich);
$template->setImage('logo', 'assets/WaltDietzney.png', [
    'width' => '2cm',
    'anchor' => 'as-char',
    'wrap' => 'none',
]);

// 11. Render and save the final document
$template->render();
$template->save('samples/output/output_14_advancedTabs.odt');

// --- End of Sample 14 ---
